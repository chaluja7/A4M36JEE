package cz.cvut.fel.aos.booking.service.flight;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/** This class was generated by Apache CXF 2.3.1 Wed Oct 24 00:32:41 CEST 2012 Generated source version: 2.3.1 */

@WebService( targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", name = "FlightService" )
@XmlSeeAlso( { ObjectFactory.class } )
public interface FlightService {

    @WebResult( name = "return", targetNamespace = "" )
    @RequestWrapper( localName = "findFlights", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlights" )
    @WebMethod
    @ResponseWrapper( localName = "findFlightsResponse", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlightsResponse" )
    public java.util.List<cz.cvut.fel.aos.booking.service.flight.Flight> findFlights(
            @WebParam( name = "intervalFrom", targetNamespace = "" )
            java.util.Date intervalFrom,
            @WebParam( name = "intervalTo", targetNamespace = "" )
            java.util.Date intervalTo,
            @WebParam( name = "codeFrom", targetNamespace = "" )
            java.lang.String codeFrom,
            @WebParam( name = "codeTo", targetNamespace = "" )
            java.lang.String codeTo
    );

    @WebResult( name = "return", targetNamespace = "" )
    @RequestWrapper( localName = "findAll", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindAll" )
    @WebMethod
    @ResponseWrapper( localName = "findAllResponse", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindAllResponse" )
    public java.util.List<cz.cvut.fel.aos.booking.service.flight.Flight> findAll();

    @WebResult( name = "return", targetNamespace = "" )
    @RequestWrapper( localName = "findFlightsTo", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlightsTo" )
    @WebMethod
    @ResponseWrapper( localName = "findFlightsToResponse", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlightsToResponse" )
    public java.util.List<cz.cvut.fel.aos.booking.service.flight.Flight> findFlightsTo(
            @WebParam( name = "intervalFrom", targetNamespace = "" )
            java.util.Date intervalFrom,
            @WebParam( name = "intervalTo", targetNamespace = "" )
            java.util.Date intervalTo,
            @WebParam( name = "codeTo", targetNamespace = "" )
            java.lang.String codeTo
    );

    @WebResult( name = "return", targetNamespace = "" )
    @RequestWrapper( localName = "find", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.Find" )
    @WebMethod
    @ResponseWrapper( localName = "findResponse", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindResponse" )
    public cz.cvut.fel.aos.booking.service.flight.Flight find(
            @WebParam( name = "flightNumber", targetNamespace = "" )
            java.lang.String flightNumber
    );

    @WebResult( name = "return", targetNamespace = "" )
    @RequestWrapper( localName = "findFlightsFrom", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlightsFrom" )
    @WebMethod
    @ResponseWrapper( localName = "findFlightsFromResponse", targetNamespace = "http://flight.service.booking.aos.fel.cvut.cz/", className = "cz.cvut.fel.aos.booking.service.flight.FindFlightsFromResponse" )
    public java.util.List<cz.cvut.fel.aos.booking.service.flight.Flight> findFlightsFrom(
            @WebParam( name = "intervalFrom", targetNamespace = "" )
            java.util.Date intervalFrom,
            @WebParam( name = "intervalTo", targetNamespace = "" )
            java.util.Date intervalTo,
            @WebParam( name = "codeFrom", targetNamespace = "" )
            java.lang.String codeFrom
    );
}
